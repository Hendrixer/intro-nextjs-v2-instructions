{"pageProps":{"post":{"attributes":{"title":"Navigation"},"html":"<p>Next.js does so much behind the scene when it comes to handling navigation for our pages. From the docs:</p>\n<p><em>How Navigation Works</em>\n<br></p>\n<ul>\n<li>A route transition is initiated using <Link> or calling router.push().</li>\n<li>The router updates the URL in the browserâ€™s address bar.</li>\n<li>The router avoids unnecessary work by re-using segments that haven&#39;t changed (e.g. shared layouts) from the client-side cache. This is also referred to as partial rendering.</li>\n<li>If the conditions of soft navigation are met, the router fetches the new segment from the cache rather than the server. If not, the router performs a hard navigation and fetches the Server Component payload from the server.</li>\n<li>If created, loading UI is shown from the server while the payload is being fetched.</li>\n<li>The router uses the cached or fresh payload to render the new segments on the client.</li>\n</ul>\n<h2 id=\"using-the-link-component\">Using the Link component</h2>\n<p>In place of an anchor tag, we can use the <code>Link</code> component from <code>next/link</code> to handle click interactions that translate to page navigations. It&#39;s easier than ever to use.</p>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Link</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;next/link&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Page</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;/blog&quot;</span>&gt;</span>Blog<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Link</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  );\n}\n</code></pre>\n<p>For dynamic routes, we can just interpolate.</p>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Link</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;next/link&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Blog</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">{</span>`/<span class=\"hljs-attr\">blog</span>/${<span class=\"hljs-attr\">post.title</span>}`}&gt;</span>Post<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Link</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  );\n}\n</code></pre>\n<h2 id=\"programatic-usage\">Programatic usage</h2>\n<p>If you need to navigate between pages programmatically instead of when a user clicks. First, you must understand that this only works in client components, we&#39;ll get there later. Next.js provides a hook we can use that creates a router object for that has helpful navigation methods on it.</p>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-string\">&quot;use client&quot;</span>;\n\n<span class=\"hljs-keyword\">import</span> { useRouter } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;next/navigation&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Page</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">const</span> router = <span class=\"hljs-title function_\">useRouter</span>();\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;button&quot;</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> router.push(&quot;/blog&quot;)}&gt;\n      Blog\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span>\n  );\n}\n</code></pre>\n","slug":"navigation","title":"Navigation","section":"Pages","icon":"file-code","filePath":"/home/runner/work/intro-nextjs-v2-instructions/intro-nextjs-v2-instructions/lessons/03-Pages/C-navigation.md","nextSlug":"/lessons/Rendering/server-components","prevSlug":"/lessons/Pages/layouts"}},"__N_SSG":true}