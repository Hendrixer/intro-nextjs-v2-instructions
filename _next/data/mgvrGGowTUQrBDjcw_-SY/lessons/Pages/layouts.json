{"pageProps":{"post":{"attributes":{"title":"Layouts and Pages"},"html":"<h2 id=\"head-component\">Head component</h2>\n<p>Our app needs a <code>head</code> component in the app directory. This will hold the meta and title tags for our application.</p>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-comment\">// ./app/head.tsx</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Head</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;viewport&quot;</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/&gt;</span></span>\n  );\n}\n</code></pre>\n<h2 id=\"layouts\">Layouts</h2>\n<p>Layouts are components that wrap our pages. We can use them when we want to keep certain UI elements on page across routes. Things like a navigation bar, footer, layout, etc. We need to create a root layout. You must have a root layout when using the app directory.</p>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-comment\">// ./app/layout.tsx</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">RootLayout</span>(<span class=\"hljs-params\">{ children }</span>) {\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">&quot;en&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span> /&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>{children}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></span>\n  );\n}\n</code></pre>\n<h3 id=\"nested-layouts\">Nested Layouts</h3>\n<p>It&#39;s required to have a root layout, but we can also have multiple nested layouts that render inside each other. You simply have to create a <code>layout</code> file in the route folder. By default, the layouts will nest.</p>\n","slug":"layouts","title":"Layouts and Pages","section":"Pages","icon":"file-code","filePath":"/home/runner/work/intro-nextjs-v2-instructions/intro-nextjs-v2-instructions/lessons/03-Pages/B-layouts.md","nextSlug":"/lessons/Pages/navigation","prevSlug":"/lessons/Pages/defining-routes"}},"__N_SSG":true}